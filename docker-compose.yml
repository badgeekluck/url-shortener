services:
  shortener-service:
    build: ./shortener-service
    ports:
      - "8080:8080"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    env_file:
      - ./.env
    environment:
      - GIN_MODE=release

  analytics-service:
    build: ./analytics-service
    ports:
      - "8081:8081"
    depends_on:
      consul:
        condition: service_healthy
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    env_file:
      - ./.env

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 5s
      timeout: 2s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 2s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 5s
      timeout: 2s
      retries: 5

  consul:
    image: hashicorp/consul:1.19
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - consul_data:/consul/data
    command: >
      sh -c "
        (
          sleep 10 &&
          echo 'jq (JSON işlemcisi) kuruluyor...' &&
          apk add --no-cache jq &&
          echo 'config.json Consul''a yükleniyor...' &&
          jq -c '.[]' /consul/config/config.json | while read i; do
            key=$(echo $i | jq -r '.key');
            value=$(echo $i | jq -r '.value');
            consul kv put \"$key\" \"$value\";
          done &&
          echo 'Consul ayarları başarıyla yüklendi.'
        ) &
        consul agent -server -bootstrap-expect=1 -dev -client=0.0.0.0 -ui
      "
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 5s
      timeout: 2s
      retries: 5

volumes:
  postgres_data:
  consul_data: